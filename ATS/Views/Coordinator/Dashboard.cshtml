@model IEnumerable<JobPost>

@{
    ViewBag.Title = "Coordinator Dashboard";
}

<h2 class="text-center mb-4">Coordinator Dashboard</h2>

<div class="container mt-4">
    <div class="row">
        <div class="col-md-4">
            <div class="card">
                <div class="card-body text-center">
                    <h5 class="card-title">Total Jobs</h5>
                    <p class="card-text display-4">@Model.Count()</p>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card">
                <div class="card-body text-center">
                    <h5 class="card-title">Approved</h5>
                    <p class="card-text display-4">@TempData["Approved"]</p>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card">
                <div class="card-body text-center">
                    <h5 class="card-title">Pending Approval</h5>
                    <p class="card-text display-4">@Model.Count(j => !j.IsApproved)</p>
                </div>
            </div>
        </div>
        @*<div class="col-md-3">
        <div class="card">
        <div class="card-body text-center">
        <h5 class="card-title">Active Recruiters</h5>
        <p class="card-text display-4">@Model.SelectMany(j => j.Recruiters).Distinct().Count()</p>
        </div>
        </div>
        </div>*@
    </div>

    <div class="table-responsive mt-4">
        <table class="table table-bordered table-striped">
            <thead class="thead-dark">
                <tr>
                    <th>Job Title</th>
                    <th>Location</th>
                    <th>Salary</th>
                    <th>Responsibilities</th>
                    <th>Employer</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>@Html.DisplayFor(modelItem => item.JobTitle)</td>
                        <td>@Html.DisplayFor(modelItem => item.Location)</td>
                        <td>@Html.DisplayFor(modelItem => item.Salary)</td>
                        <td>@Html.DisplayFor(modelItem => item.Responsibilities)</td>
                        <td>
                            <a href="@Url.Action("EmployerProfile", "Employer", new { employerId = item.CreatedBy.Id })" class="employer-link">
                                @Html.DisplayFor(modelItem => item.CreatedBy.FullName)
                            </a>
                        </td>
                        <td>
                            <div class="action-icons">
                                @Html.ActionLink("Assign Recruiters", "AssignRecruiter", "Coordinator", new { id = item.JobPostId }, new { @class = "btn btn-primary btn-sm" })
                                @Html.ActionLink("Approve", "ApproveJob", new { id = item.JobPostId }, new { @class = "btn btn-success btn-sm" })
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>
    <script>
        // JavaScript for hover effect on table rows
        $(document).ready(function () {
            $('.table tbody tr').hover(
                function () {
                    $(this).addClass('table-row-hover');
                },
                function () {
                    $(this).removeClass('table-row-hover');
                }
            );

            // Optional: Add smooth scrolling to employer profile links
            $('.employer-link').on('click', function (e) {
                e.preventDefault();
                var target = $(this).attr('href');
                $('html, body').animate({
                    scrollTop: $(target).offset().top
                }, 800);
            });

            @if (TempData["Success"] != null)
        {
            <text>
                    Swal.fire({
                        icon: 'success',
                        title: 'Success',
                        text: '@TempData["SuccessMessage"]',
                        showConfirmButton: false,
                        timer: 3000
                    });
            </text>
        }

            @if (TempData["Error"] != null)
        {
            <text>
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: '@TempData["Error"]',
                        showConfirmButton: true
                    });
            </text>
        }
        });
    </script>
}

<style>
    .action-icons {
        display: flex;
        justify-content: space-between;
    }

        .action-icons a {
            flex: 1;
            margin: 0 5px;
            text-align: center;
        }
    /* Custom CSS for table row hover effect */
    .table-row-hover {
        background-color: #f8f9fa; /* Light gray background on hover */
        transition: background-color 0.3s ease;
    }

    /* Optional: Add styling for the Employer column link */
    .employer-link {
        color: #007bff; /* Bootstrap primary link color */
        text-decoration: none;
        transition: color 0.3s ease;
    }

        .employer-link:hover {
            color: #0056b3; /* Darker shade of primary color on hover */
            text-decoration: underline;
        }
</style>